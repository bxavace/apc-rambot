name: Deploy to AWS Lightsail

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install dependencies
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          sudo apt update
          sudo apt install -y git python3-pip
        EOF

    - name: Deploy to AWS Lightsail
      env:
        VECTOR_STORE_ADDR: ${{ secrets.VECTOR_STORE_ADDR }}
        VECTOR_STORE_KEY: ${{ secrets.VECTOR_STORE_KEY }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        INDEX_NAME_DEV: ${{ secrets.INDEX_NAME_DEV }}
        FLASK_ENV: ${{ secrets.FLASK_ENV }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        AZ_OAI_VER: ${{ secrets.AZ_OAI_VER }}
        AZ_OAI_KEY: ${{ secrets.AZ_OAI_KEY }}
        AZ_OAI_ENDPOINT: ${{ secrets.AZ_OAI_ENDPOINT }}
        AZ_OAI_DEPLOYMENT: ${{ secrets.AZ_OAI_DEPLOYMENT }}
        ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -x
          cd /home/ubuntu/apc-rambot/ &&
          git stash &&
          git pull origin main &&
          python3 -m venv venv &&
          source venv/bin/activate &&
          echo "VECTOR_STORE_ADDR=${VECTOR_STORE_ADDR}" > .env &&
          echo "VECTOR_STORE_KEY=${VECTOR_STORE_KEY}" >> .env &&
          echo "SECRET_KEY=${SECRET_KEY}" >> .env &&
          echo "INDEX_NAME_DEV=${INDEX_NAME_DEV}" >> .env &&
          echo "FLASK_ENV=${FLASK_ENV}" >> .env &&
          echo "DATABASE_URL=${DATABASE_URL}" >> .env &&
          echo "AZ_OAI_VER=${AZ_OAI_VER}" >> .env &&
          echo "AZ_OAI_KEY=${AZ_OAI_KEY}" >> .env &&
          echo "AZ_OAI_ENDPOINT=${AZ_OAI_ENDPOINT}" >> .env &&
          echo "AZ_OAI_DEPLOYMENT=${AZ_OAI_DEPLOYMENT}" >> .env &&
          echo "ADMIN_USERNAME=${ADMIN_USERNAME}" >> .env &&
          echo "ADMIN_PASSWORD=${ADMIN_PASSWORD}" >> .env &&
          pip3 install -r requirements.txt &&
          flask db upgrade &&
          pkill gunicorn || true &&
          gunicorn -w 3 --daemon -b 0.0.0.0:5000 --certfile=/home/ubuntu/combined.crt --keyfile=/home/ubuntu/apc.edu.ph.key app:app
        EOF
